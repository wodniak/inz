#pragma once
#ifndef MYIMGPROC_H
#define MYIMGPROC_H

#include <iostream>
#include <sstream>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/videoio.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/video.hpp>
#include<opencv2/opencv.hpp>

using namespace cv;
using namespace std;

class Myimgproc
{
private:
	static Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
	static Mat img_tracking;
	static Ptr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor

	//erosion / dilation window size
	static const int erosion_size = 3;
	static const int dilation_size = 8;

	//used by findContours method
	static vector<vector<Point>> contours;
	static vector<Vec4i> hierarchy;

	//used to extract maze lines
	static Mat src_HSV;
	static Mat dst;

public:
	/**/
	static void init();

	/*
	*Create all opencv windows to show results
	*/
	static void createAllWindows(void);


	/*  Get tank position
	*  mark it with contour
	*  uses background substraction algorithm
	*/
	static void processImages(Mat & frame);


	/*Extract maze lines from first image
	* and draw them
	*/
	static void draw_maze(Mat & frame);
};

void histogram_debug(void);

#endif // MYIMGPROC_H